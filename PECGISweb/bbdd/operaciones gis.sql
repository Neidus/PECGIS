

SELECT geom from polygons_table where gid=5;

SELECT geom from lines_table where attribute='r10';

SELECT ST_Intersection(lines_table.geom, polygons_table.geom)
from lines_table, polygons_table 
where lines_table.attribute='l10' and polygons_table.attribute='r10';

SELECT * FROM polygons_table, lines_table WHERE ST_Intersetcs (polygons_table.geom, lines_table.geom)

SELECT ST_Length ("0102000020E6100000030000000256C56A0D6254C02358FBAF680F43C0709AA91A887652C0D4572FA602A946C073E915CFD97350C0150C3C0010F547C0")


CREATE TABLE intersection AS SELECT ST_Intersection(lines_table.geom, polygons_table.geom)
from lines_table, polygons_table 
where lines_table.attribute='l10' and polygons_table.attribute='r10';

SELECT ST_Length(ST_Intersection(lines_table.geom, polygons_table.geom))
from lines_table, polygons_table 
where lines_table.attribute='l10' and polygons_table.attribute='r10';

SELECT ST_Length(rutas.geom)
from rutas 
where rutas.gid_serial=4;



SELECT ST_Length(ST_Intersection(rutas.geom, zonas.geom)), zonas.peligrosidad
from rutas, zonas
where rutas.gid_serial=1 and zonas.gid_serial=2;


CREATE TABLE public.multipolygons (
  gid integer NOT NULL DEFAULT(),
  geom geometry(MultiPolygon,4326),
  CONSTRAINT multipolygons_pkey PRIMARY KEY (gid)
 )
  WITH (
  OIDS=FALSE
);


INSERT INTO intersection (st_intersection) VALUES (ST_Collect(ARRAY(SELECT geom FROM polygons_table)));


SELECT ST_Length(ST_Intersection(lines_table.geom, intersection.st_intersection))
from lines_table, intersection
where lines_table.attribute='l10' and intersection.st_intersection




